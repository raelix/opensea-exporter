# Default values for prometheus-json-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/prometheuscommunity/json-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: []
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: []

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: NodePort
  port: 7979

serviceMonitor:
  ## If true, a ServiceMonitor CRD is created for a prometheus operator
  ## https://github.com/coreos/prometheus-operator
  ##
  enabled: true

  namespace: ""
  scheme: http

  # Default values that will be used for all ServiceMonitors created by `targets`
  defaults:
    additionalMetricsRelabels: {}
    interval: 10s
    labels: {}
    scrapeTimeout: 30s

  targets:
   - name: otherdeed                 
     url: https://api.opensea.io/api/v1/collection/otherdeed/stats
     labels: {}                       
     interval: 30s                    
     scrapeTimeout: 30s               
     additionalMetricsRelabels: {}    
   - name: rtfkt-podx               
     url: https://api.opensea.io/api/v1/collection/rtfkt-podx/stats
     labels: {}                       
     interval: 30s                    
     scrapeTimeout: 30s               
     additionalMetricsRelabels: {}   
   - name: rtfkt-mnlth-1               
     url: https://api.opensea.io/api/v1/collection/rtfkt-mnlth/stats
     labels: {}                       
     interval: 30s                    
     scrapeTimeout: 30s               
     additionalMetricsRelabels: {}    
   - name: rtfkt-mnlth-2               
     url: https://api.opensea.io/api/v1/collection/rtfktmonolith/stats
     labels: {}                       
     interval: 30s                    
     scrapeTimeout: 30s               
     additionalMetricsRelabels: {}    
   - name: skinvial-evox               
     url: https://api.opensea.io/api/v1/collection/skinvial-evox/stats
     labels: {}                       
     interval: 30s                    
     scrapeTimeout: 30s               
     additionalMetricsRelabels: {} 
   - name: rtfkt-nike-cryptokicks               
     url: https://api.opensea.io/api/v1/collection/rtfkt-nike-cryptokicks/stats
     labels: {}                       
     interval: 30s                    
     scrapeTimeout: 30s               
     additionalMetricsRelabels: {}    

#    - name: example                    # Human readable URL that will appear in Prometheus / AlertManager
#      url: http://example.com/healthz  # The URL that json-exporter will scrape
#      labels: {}                       # Map of labels for ServiceMonitor. Overrides value set in `defaults`
#      interval: 60s                    # Scraping interval. Overrides value set in `defaults`
#      scrapeTimeout: 60s               # Scrape timeout. Overrides value set in `defaults`
#      additionalMetricsRelabels: {}    # Map of metric labels and values to add

ingress:
  enabled: false
  className: ""
  annotations: []
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: []

tolerations: []

affinity: []
configuration:
  config: |
    ---
    metrics:
      - name: stats
        type: object
        help: Opensea project stats
        path: '{.stats}'
        labels:
          environment: opensea 
        values:
          floor_price: '{.floor_price}'   
          total_sales: '{.total_sales}'   
          one_day_sales: '{.one_day_sales}' 
          one_day_average_price: '{.one_day_average_price}'

    headers:
      X-Dummy: my-test-header

    # If 'body' is set, it will be sent by the exporter as the body content in the scrape request. The HTTP method will also be set as 'POST' in this case.
    # body:
    #   content: |
    #     {"time_diff": "1m25s", "anotherVar": "some value"}

    # The body content can also be a Go Template (https://golang.org/pkg/text/template), with all the functions from the Sprig library (https://masterminds.github.io/sprig/) available. All the query parameters sent by prometheus in the scrape query to the exporter, are available in the template.
    # body:
    #   content: |
    #     {"time_diff": "{{ duration `95` }}","anotherVar": "{{ .myVal | first }}"}
    #   templatize: true

    # For full http client config parameters, ref: https://pkg.go.dev/github.com/prometheus/common/config?tab=doc#HTTPClientConfig
    #
    # http_client_config:
    #   tls_config:
    #     insecure_skip_verify: true
    #   basic_auth:
    #     username: myuser
    #     #password: veryverysecret
    #     password_file: /tmp/mysecret.txt

## Custom PrometheusRules to be defined
## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
prometheusRule:
  enabled: false
  additionalLabels: {}
  namespace: ""
  rules: []